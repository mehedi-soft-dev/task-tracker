version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: tasktracker-db-mehedi
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123456!}
      POSTGRES_DB: ${POSTGRES_DB:-TaskTrackerDB}
    ports:
      - "${DB_PORT:-5439}:5439"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - tasktracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # .NET Backend API
  backend:
    build:
      context: ./src/backend/TaskTrackerApi
      dockerfile: Dockerfile
    container_name: tasktracker-backend-mehedi
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=${POSTGRES_DB:-TaskTrackerDB};Username=${POSTGRES_USER:-admin};Password=${POSTGRES_PASSWORD:-123456!}"
    ports:
      - "${BACKEND_PORT:-2900}:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tasktracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/graphql"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ./src/frontend/task-tracker-react
      dockerfile: Dockerfile
      args:
        REACT_APP_API_ENDPOINT: ${REACT_APP_API_ENDPOINT:-http://localhost:2900/graphql}
    container_name: tasktracker-frontend-mehedi
    restart: unless-stopped
    environment:
      REACT_APP_API_ENDPOINT: ${REACT_APP_API_ENDPOINT:-http://localhost:2900/graphql}
    ports:
      - "${FRONTEND_PORT:-3003}:80"
    depends_on:
      - backend
    networks:
      - tasktracker-network

networks:
  tasktracker-network:
    driver: bridge
    name: tasktracker-network

volumes:
  postgres_data:
    name: tasktracker-postgres-data